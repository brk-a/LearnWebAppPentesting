#!/usr/bin/bash

# ** output can be `redirected` to a file; input can be read into stdin
# use cases:
# log to a logfile (usin timestamps, for example)
# create config files dynamically
# show output of stderr elsewhere, not just stdin
# read an input stream


echo 'test' > test.txt # write "test" to file `test.txt`
echo 'more test' >> test.txt # append " more test" to file `test.txt`
find / -type d -name bash -executable 2>/dev/null # redirect output
# of stderr to `/dev/null`
wc -w test.txt #how many words are in `test.txt`?
# why does the file name appear in output?
wc -w < test.txt # better
cat << EOF The quick, brown fox jumps over the lazy dog EOF
# the `<<` tells bash to accept a stream of input from stdin until the
# first occurrence of the first string provided occurs
# simply: `cat` everything between the `EOF`s

#use `wc` on one line, not a file or the output of a file
wc -w <<< "This is a test string : 8 words" #output: 8
