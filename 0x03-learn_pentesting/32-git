#!/usr/bin/bash

# ** aim is to get to level 32
# git repo at `ssh://bandit31-git@localhost/home/bandit31-git/repo`
# password for `bandit31-git` is the same as that of `bandit31`
# clone repo and find the password for the next level

mktemp -d #dir at /tmp/dir-name
cd /tmp/dir-name #use the dir name the system gives you
git clone ssh://bandit31-git@localhost:2220/home/bandit31-git/repo #use
#password for `bandit31`

ls #repo
cd repo
ls #README
cat README #no password; instructions instead

git status #on branch `master`
git branch #one branch: `master`

echo "May I come in?">key.txt
ls #`key.txt` exists

git add key.txt
git commit -m "pushing file to branch"
git push origin master #nothing pushed; why?

ls -la #`.gitignore`
cat .gitignore #`*.txt` is listed here; that's why
sed -i 's/*.txt/""/g' .gitignore
cat .gitignore #nada

git add key.txt
git commit -m "pushing file to branch"
git push origin master #found password; copy to clipboard

exit #back to our machine

echo p4ssWord > passwd #use the password you copied to clipboard

sshpass -p $(cat passwd) ssh bandit32@bandit.labs.overthewire.org -p 2220

# command `sed` allows you to perform basic text transformations on an input
# stream (a file or input from a pipeline)
# i tells the sed command to write the results to a file instead of stdout
# s is the `substitute` flag
# g is the `global replacement` flag; it replaces all occurrences of a string
# instead of just the first
# type `man sed` in terminal and press ENTER